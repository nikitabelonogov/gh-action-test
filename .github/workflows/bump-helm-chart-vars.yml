name: "Test Workflow"

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'ref'
        type: string
        required: true
      dismiss_failed_tests:
        description: 'Ignore failed test results'
        type: boolean
        required: false

env:
  ACTIONS_STEP_DEBUG: '${{ secrets.ACTIONS_STEP_DEBUG }}'

jobs:
  validate_submodules_and_dependencies:
    name: "Submodules/deps"
    runs-on: ubuntu-latest
    steps:
      - uses: hmarr/debug-action@v2.1.0

      - name: "Validate: required gh checks"
        uses: actions/github-script@v6
        continue-on-error: ${{ inputs.dismiss_failed_tests }}
        env:
          REQUIRED_CHECKS: ${{ env.REQUIRED_CHECKS }}
          REF: ${{ inputs.ref }}
        with:
          github-token: ${{ secrets.GIT_PAT }}
          script: |
            const {repo, owner} = context.repo;
            const ref = process.env.REF;
            const required_checks_names = process.env.REQUIRED_CHECKS.split(',').map(e => e.trim())
            core.info("Required checks: " + required_checks_names)
            
            const all_check_runs = await github.paginate(
                github.rest.checks.listForRef,
                {
                    owner,
                    repo,
                    ref: ref,
                    per_page: 100
                },
                (response) => response.data
            )
            
            for (const check_name of required_checks_names) {
                const check = all_check_runs.find(e => e.name === check_name)
                if (check) {
                    const check_msg = `Check "${check.name}" is ${check.status}, ${check.conclusion} : ${check.html_url}`
                    if (check.status === 'completed' && check.conclusion === 'success') {
                        core.info(check_msg)
                    } else {
                        core.setFailed(check_msg)
                    }
                } else {
                    core.setFailed(`No runs for check "${check_name}" was found`)
                }
            }

      - name: Calculate version
        shell: bash
        run: |
          set -xeuo pipefail
          
          echo 'HELLO'
