[tool.ruff]
# Enable the pycodestyle (`E`) and Pyflakes (`F`) rules by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    # isort
    "I001"
]
ignore = [
    "E501",
    "E402", # ignores: Module level import not at top of file.  (isort takes care of this and if not, there is usually a good reason)
]



# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "**/migrations/*.py",
]

# Same as Black.
line-length = 119

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.8 at a minimum
target-version = "py38"

[tool.ruff.per-file-ignores]
# Ignore deleting imports in __init__.py files as they're actually being used.
"__init__.py" = ["F401"]
"**/settings/label_studio.py" = ["F405"]
"**/settings/base.py" = ["F405"]
"test*.py" = ["F811"]


[tool.blue]

line-length = 119

include = 'label_studio_enterprise/.*\.py$'

# Exclude a variety of commonly ignored directories, as well as all migrations files.
force-exclude = '''
/(
    \.bzr
  | \.direnv
  | \.eggs
  | \.git
  | \.github
  | \.git-rewrite
  | \.hg
  | \.mypy_cache
  | \.nox
  | \.pants.d
  | \.pytype
  | \.ruff_cache
  | \.svn
  | \.tox
  | \.venv
  | \.hg
  | _build
  | buck-out
  | build
  | dist
  | node_modules
  | migrations
  | venv
  | __pycache__
)/
'''

target-version = ['py38']

[tool.poetry]

name = "label-studio-enterprise"
version = "2.11.2.dev1"
description = "Label Studio annotation tool"
authors = [
    "Heartex <hello@heartex.ai>",
]
license = "Apache-2.0"
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
]
homepage = "https://github.com/heartexlabs/label-studio-enterprise"
packages = [
    { include = "label_studio_enterprise" },
]

[tool.poetry.scripts]
label-studio = "label_studio_enterprise.server:main"

[tool.poetry.dependencies]
python = ">=3.8,<4"
django-allauth = "0.45.0"
django-auth-ldap = "2.2.0"
django-bootstrap4 = "2.3.1"
django-pipeline = "2.0.5"
django-rest-auth = "0.9.5"
django-semanticui-forms = "1.6.5"
django-sendgrid-v5 = "1.2.2"
dj-stripe = "2.8.3"
email-validator = "1.1.2"
ldap3 = "2.9.1"
mixpanel = "4.4.0"
pycryptodomex = "3.19.1"
pyjwt = "2.4.0"
pysaml2 = "7.0.1"
importlib-resources = "5.13.0"
rest-condition = "1.0.3"
scipy = "1.9.3"
django-silk = "4.3.0"
django-prometheus = "2.1.0"
ddtrace = ">=1.0.1"
datadog = "0.44.0"
django-redis-cache = "3.0.1"
django-scim2 = "0.17.2"
hubspot-api-client = "6.0.0"
django-admin-charts = "1.2.3"
gunicorn = "22.0.0"
google-cloud-bigquery = "^3.10.0"
google-cloud-dataflow-client = "0.8.2"
google-cloud-dataproc = "5.4.1"
google-cloud-secret-manager = "2.16.1"
memory-profiler = "0.61.0"
arrow = ">=1.2.2,<1.3.0"
pyarrow = "14.0.2"
premailer = "^3.10.0"

# Humansignal repo dependencies

label-studio = {url = "https://github.com/HumanSignal/label-studio/archive/0ee49f536ab46545f90a02ff2fa8e7c7dd12f14f.zip"}
label-studio-evalme = {url = "https://github.com/HumanSignal/label-studio-evalme/archive/5bb2b143d67d84024bbb39a19edbfd67d6ecf8e7.zip"}
label-studio-sdk = {url = "https://github.com/HumanSignal/label-studio-sdk/archive/ecd529ccc993ef23e8bb810ed8cafbd7c2892466.zip"}

[tool.poetry.group.test.dependencies]
mock = "4.0.3"
pytest = "7.2.2"
pytest-cov = "4.1.0"
pytest-django = "4.5.2"
pytest-mock = "3.11.1"
requests-mock = "1.5.2"
attrs = "23.1.0"
tavern = "2.1.0"
pytest-env = "0.6.2"
fakeredis = "1.5.0"
moto = "4.2.6"
responses = "0.13.0"
docker = "^6.1.3"
pytest-xdist = "3.4.0"
freezegun = ">=1.2.2,<1.3.0"
pre-commit = "3.3.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
